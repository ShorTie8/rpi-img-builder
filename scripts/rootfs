#!/bin/bash
# ROOTFS
source userdata.txt
source lib/source.txt

armhf_debootstrap (){
if [ -n "$PROXY" ] ; then
    http_proxy="$PROXY" debootstrap --arch armhf --foreign ${DEBIAN_VERSION} p1
    http_proxy="$PROXY" chroot p1 /debootstrap/debootstrap --second-stage
else
    debootstrap --arch armhf --foreign ${DEBIAN_VERSION} p1
    chroot p1 /debootstrap/debootstrap --second-stage
fi
}

arm64_debootstrap (){
if [ -n "$PROXY" ] ; then
    http_proxy="$PROXY" debootstrap --arch arm64 --foreign ${DEBIAN_VERSION} p1
    http_proxy="$PROXY" chroot p1 /debootstrap/debootstrap --second-stage
else
    debootstrap --arch arm64 --foreign ${DEBIAN_VERSION} p1
    chroot p1 /debootstrap/debootstrap --second-stage
fi
}

set -x
RAM=0
PROXY=""
IMAGE_FOLDER="img/"
if `grep -Fx 'ARM="armv7"' "userdata.txt" >/dev/null;`
	then IMAGE_VERSION="rootfs-armhf"
fi
if `grep -Fx 'ARM="armv8"' "userdata.txt" >/dev/null;`
	then IMAGE_VERSION="rootfs-aarch64"
fi
FILE=debian-${DEBIAN_VERSION}-${IMAGE_VERSION}.tar.xz
if ls $FILE &>/dev/null; then exit; 
	else echo "file not found";
fi
if [ ! -z "$1" ]; then
	IMAGE_VERSION="$1"
fi
if [ ! -z "$2" ]; then
	DEBIAN_VERSION="$2"
fi
set -eux -o pipefail
IMAGE_LINUX_LOADADDR="0x1080000"
IMAGE_FILE_SUFFIX="$(date +%F)"
IMAGE_FILE_NAME="debian-${DEBIAN_VERSION}-${IMAGE_VERSION}.img"
if [ $RAM -ne 0 ]; then
	IMAGE_FOLDER="ram/"
fi
mkdir -p "$IMAGE_FOLDER"
if [ $RAM -ne 0 ]; then
	mount -t tmpfs -o size=1G tmpfs $IMAGE_FOLDER
fi
truncate -s 1100MB "${IMAGE_FOLDER}${IMAGE_FILE_NAME}"
fdisk "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" <<EOF
o
n
p
1
2048
a
t
b
2148436

p
w

EOF
IMAGE_LOOP_DEV="$(losetup --show -f ${IMAGE_FOLDER}${IMAGE_FILE_NAME})"
IMAGE_LOOP_DEV_ROOTFS="${IMAGE_LOOP_DEV}p1"
partprobe "${IMAGE_LOOP_DEV}"
mkfs.ext4 -L ROOTFS "${IMAGE_LOOP_DEV_ROOTFS}"
mkdir -p p1
mount "${IMAGE_LOOP_DEV_ROOTFS}" p1
sync
umount p1
mount -o defaults,noatime "${IMAGE_LOOP_DEV_ROOTFS}" p1

mkdir -p p1/etc/apt/apt.conf.d p1/etc/dpkg/dpkg.cfg.d
echo "force-unsafe-io" > "p1/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io"
mkdir -p p1/usr/bin
if `grep -Fx 'ARM="armv7"' "userdata.txt" >/dev/null;`
	then cp $(which "qemu-arm-static") p1/usr/bin
fi
if `grep -Fx 'ARM="armv8"' "userdata.txt" >/dev/null;`
	then cp $(which "qemu-aarch64-static") p1/usr/bin
fi
if `grep -Fx 'ARM="armv7"' "userdata.txt" >/dev/null;`
	then armhf_debootstrap
fi
if `grep -Fx 'ARM="armv8"' "userdata.txt" >/dev/null;`
	then arm64_debootstrap
fi
if [ -n "$PROXY" ] ; then
	tee "p1/etc/apt/apt.conf.d/30proxy" <<EOF
Acquire::http::proxy "http://127.0.0.1:3142";
EOF
fi
if `grep -Fx 'ARM="armv7"' "userdata.txt" >/dev/null;`
	then rm p1/usr/bin/qemu-arm-static
fi
if `grep -Fx 'ARM="armv8"' "userdata.txt" >/dev/null;`
	then rm p1/usr/bin/qemu-aarch64-static
fi
if [ -n "$PROXY" ] ; then
	rm p1/etc/apt/apt.conf.d/30proxy
fi
rm p1/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io

### Finish
e4defrag -c p1

cd p1
tar cfJ ../debian-${DEBIAN_VERSION}-${IMAGE_VERSION}.tar.xz *
cd ..

umount p1

losetup -d "${IMAGE_LOOP_DEV}"
mv "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" "${IMAGE_FILE_NAME}"
if [ $RAM -ne 0 ]; then
	umount "${IMAGE_FOLDER}"
fi
rmdir "${IMAGE_FOLDER}"
rmdir p1
rm -f debian-${DEBIAN_VERSION}-${IMAGE_VERSION}.img
