#!/bin/bash
source kernel.txt
mkdir -p ${tmp0}
cd ${tmp0}

### Download kernel
echo
echo Downloading kernel.
wget -cq --show-progress https://github.com/raspberrypi/linux/archive/rpi-${version}.tar.gz
echo Done.

### Extract
echo
echo Extracting archive.
tar -xf rpi-${version}.tar.gz
#rm -f rpi-${version}.tar.gz #remove
echo Done.

### Setup
cd ${kernel}-${version}
export ARCH=arm
KERNEL=kernel

### Clean kernel
#make clean
#make mrproper

### Packaging patch
echo
echo Applying packaging patch.
sleep 1s
patch -p1 < ../${pat}/rpi0w-packaging.patch &> /dev/null
echo Done.
echo

### Foundation defconfig
case `grep -Fx "foundation_defconfig=0" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making foundation defconfig.
    make KBUILD_DEBARCH=armel ARCH=arm bcmrpi_defconfig &> /dev/null
    echo Done.
    ;;
  1)
    #echo
    ;;
  *)
    echo no config found!
    ;;
esac

### Builder defconfig
case `grep -Fx "lessfoundation_defconfig=0" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making builder defconfig.
    cp ../${def}/rpi0-noinitrd_defconfig arch/arm/configs/
    make KBUILD_DEBARCH=armel ARCH=arm rpi0-noinitrd_defconfig &> /dev/null
    echo Done.
    ;;
  1)
    #echo
    ;;
  *)
    echo no config found!
    ;;
esac

### Custom defconfig
case `grep -Fx "custom_defconfig=0" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making ${MYCONFIG}.
    cp ../${def}/${MYCONFIG} arch/arm/configs/
    make KBUILD_DEBARCH=armel ARCH=arm ${MYCONFIG} &> /dev/null
    echo Done.
    ;;
  1)
    #echo
    ;;
  *)
    echo no config found!
    ;;
esac

### Menuconfig
case `grep -Fx "menuconfig=0" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo Opening menuconfig.
    sleep 1s
    make KBUILD_DEBARCH=armel ARCH=arm menuconfig &> /dev/null
    ;;
  1)
    #echo
    ;;
  *)
    echo grumble! grumble!
    ;;
esac

### Build deb
echo
echo Building deb packages.
make -j${cores} KBUILD_DEBARCH=armel ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- bindeb-pkg
echo Done.
echo
