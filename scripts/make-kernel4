#!/bin/bash
source kernel.txt
mkdir -p ${tmp4}
cd ${tmp4}

### Download kernel
echo
echo Downloading kernel.
wget -cq --show-progress https://github.com/raspberrypi/linux/archive/rpi-${version}.tar.gz
echo Done.

### Extract
echo
echo Extracting archive.
tar -xf rpi-${version}.tar.gz
#rm -f rpi-${version}.tar.gz #remove
echo Done.

### Setup
cd ${kernel}-${version}
export ARCH=arm64

### Clean kernel
#make clean
#make mrproper

### Packaging patches
echo
echo Applying packaging patch.
patch -p1 < ../${pat}/rpi4b-packaging.patch &> /dev/null
cp -f ../${pat}/headers-byteshift.patch headers-byteshift.patch
echo Done.
echo

### Foundation defconfig
case `grep -Fx "foundation_defconfig=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making foundation defconfig.
    make ARCH=arm64 bcm2711_defconfig &> /dev/null
    echo Done.
    ;;
  1)
    #echo
    ;;
  *)
    echo no config found!
    ;;
esac

### Builder defconfig
case `grep -Fx "lessfoundation_defconfig=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making builder defconfig.
    cp -f ../${def}/rpi4-noinitrd_defconfig arch/arm64/configs/
    make ARCH=arm64 rpi4-noinitrd_defconfig &> /dev/null
    echo Done.
    ;;
  1)
    #echo
    ;;
  *)
    echo no config found!
    ;;
esac

### Custom defconfig
case `grep -Fx "custom_defconfig=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making ${MYCONFIG}.
    cp -f ../${def}/${MYCONFIG} arch/arm64/configs/
    make ARCH=arm64 ${MYCONFIG} &> /dev/null
    echo Done.
    ;;
  1)
    #echo
    ;;
  *)
    echo no config found!
    ;;
esac

### Menuconfig
case `grep -Fx "menuconfig=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo Opening menuconfig.
    sleep 1s
    make menuconfig &> /dev/null
    ;;
  1)
    #echo
    ;;
  *)
    echo grumble! grumble!
    ;;
esac

### Build deb
case `grep -Fx "native=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo --- Building deb packages.
    make -j${cores} ARCH=arm64 bindeb-pkg
    ;;
  1)
    echo
    echo you are cross compiling
    ;;
  *)
    echo grumble! grumble!
    ;;
esac

case `grep -Fx "crosscompile=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo --- Building deb packages.
    make -j${cores} ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bindeb-pkg
    ;;
  1)
    echo 
    echo you are not cross compiling
    ;;
  *)
    echo grumble! grumble!
    ;;
esac
echo Done.
echo
