#!/bin/bash
source lib/source.txt
source lib/func.txt
source lib/rpi4_func.txt
source userdata.txt
RED="\e[1;31m"
GRN="\e[1;32m"
CLN="\e[1;33m"
FIN="\e[0m"
UD=userdata.txt

userdata () {
echo ""
echo -e "You have ${RED}not${FIN} created a ${RED}userdata.txt${FIN} file."
while [ true ] ; do
read -t 3 -n 1
if [ $? = 0 ] ; then
exit ;
else
dialog --infobox "Please review the README.md or run make config." 3 51
fi
done
}

if [ -f "$UD" ]; then
    echo ""
    echo -e "${RED}$UD file found${FIN}."
else 
    userdata
fi

case `grep -Fx "devuser=1" "userdata.txt" >/dev/null; echo $?` in
  0)
    echo ""
    echo -e "${RED}Wrong userdata file${FIN}!"
    echo ""
    while [ true ] ; do
    read -t 2 -n 1
    if [ $? = 0 ] ; then
    exit ;
    else
    dialog --infobox "Please review the README.md or run make config." 3 51
    fi
    done
    ;;
esac

mkdir -p ${TMP4}
cd ${TMP4}
cp -f ../userdata.txt userdata.txt
rpi4_clean

### Download kernel
download

### Extract
extract

### Setup
if `grep -Fx 'ARM="armv7"' "../userdata.txt" >/dev/null;`
	then armv7_kernel_setup;
fi
if `grep -Fx 'ARM="armv8"' "../userdata.txt" >/dev/null;`
	then armv8_kernel_setup;
fi

### Patching
if `grep -Fx 'ARM="armv7"' "../userdata.txt" >/dev/null;`
	then armv7_patching;
fi
if `grep -Fx 'ARM="armv8"' "../userdata.txt" >/dev/null;`
	then armv8_patching;
fi

### Defconfig
if `grep -Fx 'ARM="armv7"' "../userdata.txt" >/dev/null;`
	then armv7_defconfig;
fi
if `grep -Fx 'ARM="armv8"' "../userdata.txt" >/dev/null;`
	then armv8_defconfig;
fi

### Menuconfig
if `grep -Fx "menuconfig=1" "../userdata.txt" >/dev/null;`
	then menuconfig;
fi

### Build deb
if `grep -Fx 'ARM="armv7"' "../userdata.txt" >/dev/null;`
	then armv7_builddeb;
fi
if `grep -Fx 'ARM="armv8"' "../userdata.txt" >/dev/null;`
	then armv8_builddeb;
fi
echo
cd ..
rm -f linux-libc-dev*.deb
rm -f *.buildinfo
rm -f *.changes
echo Done.
