#!/bin/bash
source kernel.txt
mkdir -p ${TMP3}
cd ${TMP3}

### Download kernel
echo
echo Downloading kernel.
wget -cq --show-progress https://github.com/raspberrypi/linux/archive/rpi-${VERSION}.tar.gz
echo Done.

### Extract
echo
echo Extracting archive.
tar -xf rpi-${VERSION}.tar.gz
#rm -f rpi-${VERSION}.tar.gz #remove
echo Done.

### Setup
cd ${KERNEL}-${VERSION}
export ARCH=arm64

### Builddeb
rm -f scripts/package/builddeb
rm -f scripts/package/mkdebian
cp ../${BD}/builddeb scripts/package/builddeb
cp ../${BD}/mkdebian scripts/package/mkdebian
chmod +x scripts/package/builddeb
chmod +x scripts/package/mkdebian

### Clean kernel
#make clean
#make mrproper

### Patching
case `grep -Fx "native=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo Applying nc packaging patch.
    patch -p1 < ../${NC}/rpi3b-packaging.patch
    echo Done.
    echo
    ;;
  *)
    #echo
    ;;
esac

case `grep -Fx "crosscompile=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo Applying cc packaging patch.
    patch -p1 < ../${CC}/rpi3b-packaging.patch
    cp -f ../${PAT}/headers-byteshift.patch headers-byteshift.patch
    echo Done.
    echo
    ;;
  *)
    #echo
    ;;
esac

### Foundation defconfig
case `grep -Fx "foundation_defconfig=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making foundation defconfig.
    make ARCH=arm64 bcmrpi3_defconfig &> /dev/null
    echo Done.
    ;;
  *)
    #echo
    ;;
esac

### Builder defconfig
case `grep -Fx "lessfoundation_defconfig=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making builder defconfig.
    cp -f ../${DEF}/rpi3-noinitrd_defconfig arch/arm64/configs/
    make ARCH=arm64 rpi3-noinitrd_defconfig &> /dev/null
    echo Done.
    ;;
  *)
    #echo
    ;;
esac

### Custom defconfig
case `grep -Fx "custom_defconfig=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo Making ${MYCONFIG}.
    cp -f ../${DEF}/${MYCONFIG} arch/arm64/configs/
    make ARCH=arm64 ${MYCONFIG} &> /dev/null
    echo Done.
    ;;
  *)
    #echo
    ;;
esac

### Menuconfig
case `grep -Fx "menuconfig=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo Opening menuconfig.
    sleep 1s
    make menuconfig &> /dev/null
    ;;
  *)
    #echo
    ;;
esac

### Build deb
case `grep -Fx "native=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo --- Building deb packages.
    make -j${CORES} ARCH=arm64 bindeb-pkg
    ;;
  *)
    #echo
    ;;
esac

case `grep -Fx "crosscompile=1" "../../kernel.txt" >/dev/null; echo $?` in
  0)
    echo
    echo --- Building deb packages.
    make -j${CORES} ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bindeb-pkg
    ;;
  *)
    #echo
    ;;
esac
echo Done.
echo
